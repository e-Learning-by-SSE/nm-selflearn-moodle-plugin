{"version":3,"file":"query_update.min.js","sources":["../src/query_update.js"],"sourcesContent":["define(['jquery', 'core/ajax'] , function ($, Ajax) {\n    return {\n        queryCourses: function() {\n            $('#id_search_input').on('input', function() {\n                var userInput  = $(this);\n                var searchText = \"\" + userInput.val();\n                window.console.log('Input: ' + searchText + \", URL: \"+userInput.data('data-ajax-url'));\n                var request = Ajax.call([{\n                    methodname: 'selflearn_search_items',\n                    args: { search: searchText}\n                }]);\n                request[0].then(function(data) {\n                    window.console.log('Data: ' + JSON.stringify(data));\n                    var course_select = $('#id_course_selection');\n                    course_select.empty();\n\n                    var options = [];\n                    data.forEach(function(course) {\n                        window.console.log('course: ' + JSON.stringify(course));\n                        var option = {\n                            value: course.id,\n                            text: course.name\n                        };\n                        course_select.append($('<option>', option));\n                        options.push(option);\n                    });\n\n                    course_select.value = data[0].id;\n                    course_select._qf.element.options = options;\n                    $('[name=\"course_select\"]').val(JSON.stringify(options));\n\n                    // // Add form data update handler\n                    // course_select.on('change', function() {\n                    //     $(this).closest('form').data('course_selection', $(this).val());\n                    // });\n                    // // Trigger initial update\n                    // course_select.trigger('change');\n                    // course_select.prop('required', true);\n                    // course_select.required = true;\n                }).fail(function(error) {\n                    window.console.log('AJAX request failed', error);\n                });\n            });\n        }\n    };\n});"],"names":["define","$","Ajax","queryCourses","on","userInput","this","searchText","val","window","console","log","data","call","methodname","args","search","then","JSON","stringify","course_select","empty","options","forEach","course","option","value","id","text","name","append","push","_qf","element","fail","error"],"mappings":"AAAAA,oCAAO,CAAC,SAAU,cAAe,SAAUC,EAAGC,YACnC,CACHC,aAAc,WACVF,EAAE,oBAAoBG,GAAG,SAAS,eAC1BC,UAAaJ,EAAEK,MACfC,WAAa,GAAKF,UAAUG,MAChCC,OAAOC,QAAQC,IAAI,UAAYJ,WAAa,UAAUF,UAAUO,KAAK,kBACvDV,KAAKW,KAAK,CAAC,CACrBC,WAAY,yBACZC,KAAM,CAAEC,OAAQT,eAEZ,GAAGU,MAAK,SAASL,MACrBH,OAAOC,QAAQC,IAAI,SAAWO,KAAKC,UAAUP,WACzCQ,cAAgBnB,EAAE,wBACtBmB,cAAcC,YAEVC,QAAU,GACdV,KAAKW,SAAQ,SAASC,QAClBf,OAAOC,QAAQC,IAAI,WAAaO,KAAKC,UAAUK,aAC3CC,OAAS,CACTC,MAAOF,OAAOG,GACdC,KAAMJ,OAAOK,MAEjBT,cAAcU,OAAO7B,EAAE,WAAYwB,SACnCH,QAAQS,KAAKN,WAGjBL,cAAcM,MAAQd,KAAK,GAAGe,GAC9BP,cAAcY,IAAIC,QAAQX,QAAUA,QACpCrB,EAAE,0BAA0BO,IAAIU,KAAKC,UAAUG,aAUhDY,MAAK,SAASC,OACb1B,OAAOC,QAAQC,IAAI,sBAAuBwB"}