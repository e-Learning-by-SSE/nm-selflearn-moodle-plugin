{"version":3,"file":"update_courses.min.js","sources":["../src/update_courses.js"],"sourcesContent":["define(['jquery', 'core/ajax'], function($, Ajax) {\n    return {\n        init: function() {\n            const toggle = $('#toggle');\n            const searchInput = $('input[name=\"search_input\"]');\n\n            /**\n             * REST API query for courses that match selection.\n             */\n            function updateCourses() {\n                let searchQuery = searchInput.val();\n                let toggleState = toggle.prop('checked') ? 0 : 1;\n\n                var request = Ajax.call([{\n                    methodname: 'selflearn_search_items',\n                    args: { search: searchQuery, fromAllAuthors: toggleState}\n                }]);\n                request[0].then(function(data) {\n                    var course_select = $('#id_course_selection');\n                    course_select.empty();\n\n                    var options = [];\n                    if (data && data.length >0) {\n                        data.forEach(function(course) {\n                            var option = {\n                                value: course.id,\n                                text: course.name\n                            };\n                            course_select.append($('<option>', option));\n                            options.push(option);\n                        });\n                        course_select.value = data[0].id;\n                    }\n\n                    $('[name=\"course_select\"]').val(JSON.stringify(options));\n                }).fail(function(error) {\n                    window.console.log('AJAX request failed', error);\n                });\n            }\n\n            // Attach event listeners\n            toggle.on('change', updateCourses);\n            searchInput.on('input', updateCourses);\n        }\n    };\n});\n"],"names":["define","$","Ajax","init","toggle","searchInput","updateCourses","searchQuery","val","toggleState","prop","call","methodname","args","search","fromAllAuthors","then","data","course_select","empty","options","length","forEach","course","option","value","id","text","name","append","push","JSON","stringify","fail","error","window","console","log","on"],"mappings":"AAAAA,sCAAO,CAAC,SAAU,cAAc,SAASC,EAAGC,YACjC,CACHC,KAAM,iBACIC,OAASH,EAAE,WACXI,YAAcJ,EAAE,uCAKbK,oBACDC,YAAcF,YAAYG,MAC1BC,YAAcL,OAAOM,KAAK,WAAa,EAAI,EAEjCR,KAAKS,KAAK,CAAC,CACrBC,WAAY,yBACZC,KAAM,CAAEC,OAAQP,YAAaQ,eAAgBN,gBAEzC,GAAGO,MAAK,SAASC,UACjBC,cAAgBjB,EAAE,wBACtBiB,cAAcC,YAEVC,QAAU,GACVH,MAAQA,KAAKI,OAAQ,IACrBJ,KAAKK,SAAQ,SAASC,YACdC,OAAS,CACTC,MAAOF,OAAOG,GACdC,KAAMJ,OAAOK,MAEjBV,cAAcW,OAAO5B,EAAE,WAAYuB,SACnCJ,QAAQU,KAAKN,WAEjBN,cAAcO,MAAQR,KAAK,GAAGS,IAGlCzB,EAAE,0BAA0BO,IAAIuB,KAAKC,UAAUZ,aAChDa,MAAK,SAASC,OACbC,OAAOC,QAAQC,IAAI,sBAAuBH,UAKlD9B,OAAOkC,GAAG,SAAUhC,eACpBD,YAAYiC,GAAG,QAAShC"}